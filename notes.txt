
10. 31. 2022

@2345 Added reciprocal removal - when a user disconnects from another, the disconnection is mutual
      between both accounts

@2315 The process is cleaned up now, and users are only being added once (multiple additions
        of the same user was an issue)
      Now to find out how to delete the original request that gets sent to the recipient -
      the one which they need to accept or ignore

@2305 Changed the connection acception process. 
      Will make a new account to test it out


@2135 Confirmation notifications for successful connections now corrected.
      Need to make sure the initial messages get deleted now

10.19.2022

@2045 the same confirmation notif is being sent to both users. 
  would like to compile and go over all the kinks and small additions that need to be made in order for all current functions to work correctly and optimally

@1945 need to edit code to make sure old notifcations get deleted and changed.
  had to go into the DB and manually delete notif docs and the elements from the user array

@1800 connection requests are now being made and sent with usernames included 

10. 18. 2022
@2308 the additional fields that i added for usernames arent being filled üò©

10. 17. 2022
@1225 added changes so that notification objects get made including the users usernames as well. will have to test to make sure everything is üëåüèæ

10. 16. 2022
@1425 notifs have object IDs instead of usernames.
  I need to 
  ‚Ä¢ add the sender's name in the notif that gets added to the recipient
  ‚Ä¢ add the recipients name to the notif that gets added to the sender 
  ‚Ä¢ add the senders name for tag alerts 
  

10. 12. 2022

@1807 added addition to notif endpoint for marking tagging alerts as read.
  still need to test the sendAll notifs function too 

@0921 connection removal SEEMS to be working correctly.

10. 09. 2022
@1005 added code for sending all of a user's notifications. will also need to implement endpoints for marking a notif as read.
  but first, must make sure these 2 new endpoints work

@0955 Added code for removing connection.
      it removes the id from the user's array without returning the doc. so, in the front end, the removed user must also be deleted from the current displayed list (perhaps upon recieving some confirmation from the backend)

@0940 making changes to the end point responsible for getting a user & their connections list.
  for front end, request url must include
  '?query=sendConnects' or removeConnect.
  can add ?remove=aUserID for removals

10. 08. 2022
@2357 made adjustment to the data that gets sent to the front end when user makes search request.

  should definitely make that endpoint for removing connections as well....
  before working on the notifications list endpoint, right?
  
10. 04. 2022
@1010 search now works as intended, had to fix something not shared within the tut (._.
  the results, however, send the entire user doc to the front end, so i need to trim down the results that get sent to the front end + make it into an array.
  
    map should work nicely :D

10. 01. 2022
@2315 sending user connections as a new array of objects now works as intended.
  will need to add to that endpoint, options for removing users from connections as well

09. 30. 2022
@2026 Need to adjust /getuser endpoint so that when getting users friendlist, it gets each user for the id within the array, makes a new object with the needed data, pushes that into a new array, then sends the new array.

  will probably have to use .map ...

09. 25. 2022
@1613 added "autocompleting" search capability for users. idea is to use this code from the tutorial as a "base", modify it down the line should need be.

09. 17. 2022
@1815 The tagging function now works :D ! Will make note to add
      'tag user' input on the front end

@1652 Gotta check if the connectionRequest is updating the recipient's notif.
      It doesn't appear as though it has

@1325 'Methodology for tagging users' / backend

      (post doc schema needs to be updated to include the tagged)

      for all user accounts added within the post request,
      (array of usernames)

      find their docs by name,
      (findandUpdate)

      add the notification concerning the new post into 
      their notif array
      (new notif, 
        postID: ''
        message: $sender tagged you in their latest post! 
        status: 'unread' / 'read'
      )each recipient recieves their own

    frontEnd

    if tagAlert status = 'unread', include it in tally
    if status = 'read', exclude from tally.


    TagAlerts, when clicked, runs fetch for singlePost,
    then opens blogpost component with said info

    read tags have faded text:
      - accepted connectionRequests take user to connection section
      - unread requests have 'accept' / 'ignore' options
        - ignored requests go gray as well, option remains to accept
          theyre also no longer included in tally
      - read tagAlerts will still bring user to said post 

    Upon accepting request,
    notification list goes blank as it sends the request and reloads
    upon reload, said notif should now say 'accepted'

    Also,
    (maybe a future update) for both tags and tagging users, 
    toggle list all connections or previously used tags, respectively


@0237 additions to notif list concerning tagAlerts should be done within the
      'createPost' route 

@0222 Accepting a connection request now also works as intended!
      !!! should add checks to both the 'sent' and 'accepted' statements
          for whether a previous request / entry already exists

      Due to the simplicity of the ignore request, I'll assume that it
      works as intended

09. 16. 2022
@1750 Sending a connection request ... now actually works
      Working on the acceptance part now

09. 15. 2022
@0430 Sending a connectionRequest now works as intended...
      Will work on the acceptance part next...

09. 12. 2022
@0012 Currently getting no response when I send a request to the notif endpoint.
      Will have to work backwards...

@2325 I feel as though more notes should have been added, considering the significant addition I made to the code ???

09. 09. 2022
@1354 added notification schema to user schema file.

@1109 it (should) be complete. tagging now works as intended. may need to add the manageTags middleware to the update route however ü§î
  would also have to add code for removing posts from tags array upon editting them out

@1039 WE FINALLY FIXED THE NEW UPLOADS ISSUE!
now working on the front end change required to display the actual name.

07. 27. 2022

@1432 code for getting user info from the auth key should be in some middle wear, as it gets used in every endpoint.

more incremental - socialLog endpoint functional! currently working just as intended...

@1252 issue still occuring with server crash due to tags. suggested solution is to delete current tags collection. will attempt... later

07. 22. 2022
@1400 Added comments schema.
replies refer to the comment scheme itself.
should be able to derive time data from timestamp.

@1028 Have manageTags.js return object containing tag name and id. 
test out to ensure it works 

07. 20. 2022
@1748 Added update and delete endpoints for post, using patch and delete methods, respectively. 

07. 16. 2022
@1022 the tags dont update if i send back the names instead of the IDs , so ill either have to rewrite the current updating function, or write a new one somewhere to convert the IDs into their names.

07. 12. 2022
@1205 edited tags functionality so that names of tags are returned instead of id's
and content doesnt need to be required for a post

07. 08. 2022
@1348 controller for returning all posts with certain criteria works as intended.
there may be an issue with creating posts that have the "admin" tag? im not sure what the true underlying issue is there.

next: work on function on Front end to display all posts as list items (also links?) and display the date when theres a change between post days 

07. 07. 2022
@1210 issue regarding endpoint fixed. Changed code for getting single post to use query instead of parameter

@1017 New endpoint for getting posts by month and year isnt responding...


07. 05. 2022
@1138 See notes.txt in /gears concerning need for new fields in boolean.

    will have "usePostedByBoolean" that determines whether "postedBy" fields get created for an entry or event. 
    
    if "usePostedByDate" is false for a post,
    it should have setEvent_ fields set and utilized. entries should always have "usePostedByDate" as true. 

06. 27. 2022
@1057 It all works as intended.
      will stress test to ensure it works with new tags and such. 

@1004 Weve finally managed to get the tags ID and have access to them in the main route üò≠. The hold up was due to lack of more in depth knowledge of promises await / async. 
    to be fair, the async await async await pattern runs 4 levels deep (._.
    anyhow, PROGRESS !!!
    I should now be able to save the post to each tags array and have the tags saved to the post. it only took like a week or so to get this far (._.

06. 24. 2022
@1735 trying to deal with one part of the tags in middleware function. 
    or could run it as external function within Model.pre('save', and have the array the tag ids get saved to added to the newPost doc being saved. 
    

@0801 why do tags in array display as their tags model instead of simply as strings?
    no progress as of yet.
    
    try a promise? 

06. 23. 2022
@1624 Still having issue where new tag's array doesnt get added to the post. and the array is still empty within the database

    this project isnt moving at a very 
    significant rate here at all. i am unable 
    to implement a vital feature into the API
    and im stubborn about continuing with out 
    it. May have to put it on the back burner 
    and dedicate less time until this hurdle is
    overcome.....

@1617 During the post creation process, all tags are being added. however, the new document doesnt save with the array filled.

@1025 pre existing tags get added, unable to catch name of non pre existing tag out of loop.
    make new loop just for the non pre existing?
    then verify posts are actually getting their tags array filled...
    might add that to getIndividualPost route
    
    
@0929 i may have to make another other function for when a newTag needs to be created ü•≤
@0901 need to ensure non preexisting tags are saved before second loop starts looking for them. 


06. 20. 2022
@2021 still unable to push tags id into newPost tags ObjectId array (._. 

@1103 added await to first newPost.save()
will see if it works later...

@1055 removing the addition save() for newPosts fixes that parallel save issue, but am getting error message for line 47 in routes/posts despite the tag actually getting the post id saved. 

@1032 a little more progress, wasnt saving the documents correctly before. now being told that .save(); cant be run multiple times 

@1025 Alright so the whole tags thing doesnt work flawlessly. have to ensure the tags code runs after the post has been saved successfully, so that we have access to it for the operations. 


@0806 checking the database, it seems as though my implementation for the tags did actually work! must doubly confirm, of course - but the posts and corresponding tags are present. even better, only the two tags exists, with multiple duplicate posts, meaning the code works thoroughly as intended. 

06. 15. 2022
@1123 No progress

06. 15. 2022
@1655 User login now works as intended. The issue was so small üò©üò≠
    now having issue with the tags, post thing...

06. 13. 2022
@2141 currently having issues with the JWT signing. the returned JWT doesnt include the values I signed it with. may be an issue in how I am implementing it. will check some tutorial or the docs again

06. 10. 2022
@1027 Post Model Schema to be created next, along
      with middleware to parse text. Pretty much
      would like to make sure new lines are kept
      and that bold and italics can be used 

      postRoutes should be createPost, getPost.
      delete and editPost as well. editPost should
      return text to the user facing form (using 
      front end code)
